/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * frm_questionario_atravessador.java
 *
 * Created on 26/07/2010, 09:44:24
 */
package br.com.bean;

import br.com.Persistencia.Conexao;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author MPA
 */

public class frm_questionario_atravessador extends javax.swing.JFrame {

    /** Creates new form frm_questionario_atravessador */
    private Conexao conexao;
    int inicia_combo = 0;
    String id_atravessador;
    String ItemDoCb;
    public frm_questionario_atravessador() {
        initComponents();
        conexao = new Conexao();
        conexao.conecta("mil_interface");

        //Insere nome no cbNomeAtravessador
                try {
                    cbNomeAtravessador.removeAllItems();
                    conexao.execute("select * from atravessador_cadastro");
                    
                    while (conexao.resultSet.next()){
                        cbNomeAtravessador.addItem(conexao.resultSet.getString("id_atravessador")+
                                                       " # "+ conexao.resultSet.getString("nome"));
                        //ItemDoCb = conexao.resultSet.getString("id_atravessador")+ " # "+ conexao.resultSet.getString("nome");
                        //pega_codigo(1);
                        //System.out.println(conexao.resultSet.getString("nome"));
                    }
                }catch (SQLException ex) {
                    System.out.println(ex);
                }

        conexao.execute("select * from atravessador_questionario");
        try {
            conexao.resultSet.first();
        } catch (SQLException ex) {
            System.out.println(ex+" linha 58");
        }
         mostra_dados();



    }



    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jpPescadoSubproduto = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel41 = new javax.swing.JLabel();
        cbNomeAtravessador = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        ckbSempreDosMesmos = new javax.swing.JCheckBox();
        jLabel11 = new javax.swing.JLabel();
        ckbPeixeInteiro = new javax.swing.JCheckBox();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        taOrigemProduto = new javax.swing.JTextArea();
        jScrollPane5 = new javax.swing.JScrollPane();
        taCriterioQualidadeProduto = new javax.swing.JTextArea();
        jScrollPane6 = new javax.swing.JScrollPane();
        taRecepcao = new javax.swing.JTextArea();
        jScrollPane7 = new javax.swing.JScrollPane();
        taComercializacao = new javax.swing.JTextArea();
        jScrollPane8 = new javax.swing.JScrollPane();
        taArmazenamento = new javax.swing.JTextArea();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        botao_add_atravessador = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        botao_material_atualizar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        taExigenciaCompraPescado = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tpDificuldadesEncontradas = new javax.swing.JTextPane();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane10 = new javax.swing.JScrollPane();
        jtMercadoLocal = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane11 = new javax.swing.JScrollPane();
        jtMercadoEstadual = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane12 = new javax.swing.JScrollPane();
        jtMercadoNacional = new javax.swing.JTable();
        jLabel21 = new javax.swing.JLabel();
        jScrollPane13 = new javax.swing.JScrollPane();
        jtMercadoInternacional = new javax.swing.JTable();
        ckbRestaurante = new javax.swing.JCheckBox();
        ckbSupemercados = new javax.swing.JCheckBox();
        jLabel22 = new javax.swing.JLabel();
        ckbConsumidor = new javax.swing.JCheckBox();
        ckbRevendedores = new javax.swing.JCheckBox();
        ckbFeiras = new javax.swing.JCheckBox();
        tfOutros_principaisClientes = new javax.swing.JTextField();
        ckbOutros_principaisClientes = new javax.swing.JCheckBox();
        jLabel24 = new javax.swing.JLabel();
        jScrollPane15 = new javax.swing.JScrollPane();
        jtEspecie = new javax.swing.JTable();
        jScrollPane16 = new javax.swing.JScrollPane();
        tpSempreMesmoCompradores = new javax.swing.JTextPane();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jScrollPane18 = new javax.swing.JScrollPane();
        tpGrauCompetitividade = new javax.swing.JTextPane();
        jLabel30 = new javax.swing.JLabel();
        jScrollPane19 = new javax.swing.JScrollPane();
        tpAtuacaoInstituicoesSuaRelacao = new javax.swing.JTextPane();
        jScrollPane20 = new javax.swing.JScrollPane();
        tpExisteIteracao = new javax.swing.JTextPane();
        jLabel31 = new javax.swing.JLabel();
        jScrollPane21 = new javax.swing.JScrollPane();
        tpTamanhoPescadoDiminuindo = new javax.swing.JTextPane();
        jScrollPane22 = new javax.swing.JScrollPane();
        tpEstoqueContEstavel = new javax.swing.JTextPane();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jScrollPane23 = new javax.swing.JScrollPane();
        tpNumeroFornecedoresAumentou = new javax.swing.JTextPane();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jScrollPane24 = new javax.swing.JScrollPane();
        tpCedeAdiantamento = new javax.swing.JTextPane();
        jScrollPane25 = new javax.swing.JScrollPane();
        tpSitObrigaEntregar = new javax.swing.JTextPane();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jScrollPane26 = new javax.swing.JScrollPane();
        tpComoNegocia = new javax.swing.JTextPane();
        jScrollPane27 = new javax.swing.JScrollPane();
        tpContinuarAtividade = new javax.swing.JTextPane();
        jLabel39 = new javax.swing.JLabel();
        jScrollPane28 = new javax.swing.JScrollPane();
        tpPerspectiva = new javax.swing.JTextPane();
        jScrollPane29 = new javax.swing.JScrollPane();
        tpDesejoFilhos = new javax.swing.JTextPane();
        jLabel40 = new javax.swing.JLabel();
        jScrollPane17 = new javax.swing.JScrollPane();
        tpExigenciasCompradores = new javax.swing.JTextPane();
        botao_mercado = new javax.swing.JButton();
        botao_salvar_questionario = new javax.swing.JButton();
        botao_atualizar_mercado = new javax.swing.JButton();
        botao_add_especie = new javax.swing.JButton();
        botao_atualizar_especie = new javax.swing.JButton();
        botao_alterar = new javax.swing.JButton();
        botao_excluir_jtable1 = new javax.swing.JButton();
        botao_excluir_mercadoria = new javax.swing.JButton();
        botao_excluir_especie = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        jScrollPane14 = new javax.swing.JScrollPane();
        tpObservacao = new javax.swing.JTextPane();
        tfOutrasFormasDeComercializacaoPeixe = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                fechar_janela(evt);
            }
        });

        jScrollPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));

        jLabel41.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel41.setForeground(new java.awt.Color(0, 102, 102));
        jLabel41.setText("Questionário Atravessador");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(267, 267, 267)
                .addComponent(jLabel41)
                .addContainerGap(216, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(35, Short.MAX_VALUE)
                .addComponent(jLabel41)
                .addGap(32, 32, 32))
        );

        cbNomeAtravessador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbNomeAtravessadorActionPerformed(evt);
            }
        });

        jLabel8.setText("Nome.:");

        jLabel9.setText("Origem do produto? Pescado e subprodutos.");

        jLabel10.setText("Adquire o produto sempre dos mesmo pescadores?");

        ckbSempreDosMesmos.setText("SIM");

        jLabel11.setText("Só vende o peixe inteiro? Outras formas de comercialização?");

        ckbPeixeInteiro.setText("SIM");

        jLabel12.setText("Quais os critérios para definir a qualidade do produto?");

        jLabel13.setText("Como funciona a cadeia produtiva ('caminho') do pescado e subprodutos, desde o momento em que você");

        jLabel14.setText("recebe o produto nos portos de desembarque, passando pela conservação até a entrega dos produtos ao");

        jLabel15.setText("comprador final. Caracterizar em cada elo se utiliza (maquinário, gelo, frete, etc).");

        jLabel16.setText("a) Recepção (quantos fornedores e forma; comprado do pescador ou de outro atravessador)");

        taOrigemProduto.setColumns(20);
        taOrigemProduto.setRows(5);
        jScrollPane4.setViewportView(taOrigemProduto);

        taCriterioQualidadeProduto.setColumns(20);
        taCriterioQualidadeProduto.setRows(5);
        jScrollPane5.setViewportView(taCriterioQualidadeProduto);

        taRecepcao.setColumns(20);
        taRecepcao.setRows(5);
        jScrollPane6.setViewportView(taRecepcao);

        taComercializacao.setColumns(20);
        taComercializacao.setRows(5);
        jScrollPane7.setViewportView(taComercializacao);

        taArmazenamento.setColumns(20);
        taArmazenamento.setRows(5);
        jScrollPane8.setViewportView(taArmazenamento);

        jLabel17.setText("b) Armazenamento (algum beneficiamento?)");

        jLabel18.setText("c) Comercialização (vende direto pro consumidor ou outro atravessador?)");

        botao_add_atravessador.setText("Add");
        botao_add_atravessador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botao_add_atravessadorActionPerformed(evt);
            }
        });

        jLabel19.setText("Quais são os gastos com material utilizado na atividade (estimar frequência dos gastos - 1x por semana");

        jLabel20.setText("por viagem, por mês etc).");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, "", null, null, null, null, null},
                {null, "", null, null, null, null, null},
                {null, "", null, null, null, null, null},
                {null, "", null, null, null, null, null},
                {null, "", null, null, null, null, null}
            },
            new String [] {
                "Id_material", "Material", "Tipo", "Quantidade", "Custo", "Outros", "Frequência"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane9.setViewportView(jTable1);

        botao_material_atualizar.setText("Atualizar");
        botao_material_atualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botao_material_atualizarActionPerformed(evt);
            }
        });

        jLabel1.setText("Quais as suas exigências quanto à compra do pescado, e dos subprodutos?");

        taExigenciaCompraPescado.setColumns(20);
        taExigenciaCompraPescado.setRows(5);
        jScrollPane2.setViewportView(taExigenciaCompraPescado);

        jLabel2.setText("Quais as dificuldades (gargalos) encontrados pra manter a atividade da venda? Quais as possíveis soluções (demandas) pra");

        jLabel3.setText("melhorar o seu trabalho?");

        jScrollPane3.setViewportView(tpDificuldadesEncontradas);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14));
        jLabel4.setText("Comercialização dos produtos (especificar unidade de tempo - dia, semana, mês. - na coluna 'volume')");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel5.setText("Mercado Local (no mesmo município)");

        jtMercadoLocal.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "id", "Espécie", "Produto", "Destino", "Volume", "Preço ($)"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtMercadoLocal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtMercadoLocalMouseClicked(evt);
            }
        });
        jtMercadoLocal.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtMercadoLocalFocusGained(evt);
            }
        });
        jScrollPane10.setViewportView(jtMercadoLocal);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel6.setText("Mercado Estadual (sem o mesmo município)");

        jtMercadoEstadual.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "id", "Espécie", "Produto", "Destino", "Volume", "Preço ($)"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtMercadoEstadual.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtMercadoEstadualMouseClicked(evt);
            }
        });
        jtMercadoEstadual.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtMercadoEstadualFocusGained(evt);
            }
        });
        jScrollPane11.setViewportView(jtMercadoEstadual);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel7.setText("Mercado Nacional (sem o de origem)");

        jtMercadoNacional.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "id", "Espécie", "Produto", "Destino", "Volume", "Preço ($)"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtMercadoNacional.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtMercadoNacionalMouseClicked(evt);
            }
        });
        jtMercadoNacional.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtMercadoNacionalFocusGained(evt);
            }
        });
        jScrollPane12.setViewportView(jtMercadoNacional);

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel21.setText("Mercado Internacional");

        jtMercadoInternacional.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "id", "Espécie", "Produto", "Destino", "Volume", "Preço ($)"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtMercadoInternacional.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtMercadoInternacionalMouseClicked(evt);
            }
        });
        jtMercadoInternacional.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtMercadoInternacionalFocusGained(evt);
            }
        });
        jScrollPane13.setViewportView(jtMercadoInternacional);

        ckbRestaurante.setText("Restaurante");

        ckbSupemercados.setText("Supermercados");

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 14));
        jLabel22.setText("Quais os principais clientes?");

        ckbConsumidor.setText("Consumidor");

        ckbRevendedores.setText("Revendedores");

        ckbFeiras.setText("Feiras");

        tfOutros_principaisClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfOutros_principaisClientesActionPerformed(evt);
            }
        });

        ckbOutros_principaisClientes.setText("Outros");
        ckbOutros_principaisClientes.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ckbOutros_principaisClientesStateChanged(evt);
            }
        });

        jLabel24.setText("Quais as principais perdas de pescado em função da:");

        jtEspecie.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "id", "Espécie", "Causa da perda", "Estimativa da perda (%)", "Destino do peixe perdido"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane15.setViewportView(jtEspecie);

        jScrollPane16.setViewportView(tpSempreMesmoCompradores);

        jLabel26.setText("Sempre vende para os mesmos compradores? Por que?");

        jLabel27.setText("Quais as exigencias dos compradores (quanto à qualidade dos produtos)?");

        jLabel28.setText("Como você observa a atuação das instituições IBAMA; SEPAQ; MINISTÉRIO DA PESCA; UNIVERSIDADES e qual a sua relação");

        jLabel29.setText("Qual o grau de conpetitividade/rivalidade entre os atravessadores?");

        jScrollPane18.setViewportView(tpGrauCompetitividade);

        jLabel30.setText("com estas?");

        jScrollPane19.setViewportView(tpAtuacaoInstituicoesSuaRelacao);

        jScrollPane20.setViewportView(tpExisteIteracao);

        jLabel31.setText("Existe alguma interação entre os atravessadores em relação à troca, cooperação dos produtos?");

        jScrollPane21.setViewportView(tpTamanhoPescadoDiminuindo);

        jScrollPane22.setViewportView(tpEstoqueContEstavel);

        jLabel32.setText("Em sua opinião, o estoque pesqueiro continua estável? Explique");

        jLabel33.setText("Que perspectiva você tem (vê) para os próximos anos?");

        jScrollPane23.setViewportView(tpNumeroFornecedoresAumentou);

        jLabel34.setText("O número de fornecedores aumentou nos últimos 5 anos? O que você acha dessa situação?");

        jLabel35.setText("O Tamanho médio do pescador (de emalhe) conercializado está diminuindo? A que atribui a mudança?");

        jScrollPane24.setViewportView(tpCedeAdiantamento);

        jScrollPane25.setViewportView(tpSitObrigaEntregar);

        jLabel36.setText("Essa situação obriga o pescador a lhe entregar toda a procução (ou parte dela)?");

        jLabel37.setText("Pretende continuar na atividade?");

        jLabel38.setText("Como negocia com os pescadores (a compra do produto)?");

        jScrollPane26.setViewportView(tpComoNegocia);

        jScrollPane27.setViewportView(tpContinuarAtividade);

        jLabel39.setText("Você cede algum adiantamento para o pescador antes das pescarias (\"vales\",\"rancho\")?");

        jScrollPane28.setViewportView(tpPerspectiva);

        jScrollPane29.setViewportView(tpDesejoFilhos);

        jLabel40.setText("O que deseja para os filhos? (também serão atravessadores? Por que?)");

        jScrollPane17.setViewportView(tpExigenciasCompradores);

        botao_mercado.setText("Add");
        botao_mercado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botao_mercadoActionPerformed(evt);
            }
        });

        botao_salvar_questionario.setText("Salvar");
        botao_salvar_questionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botao_salvar_questionarioActionPerformed(evt);
            }
        });

        botao_atualizar_mercado.setText("Atualizar");
        botao_atualizar_mercado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botao_atualizar_mercadoActionPerformed(evt);
            }
        });

        botao_add_especie.setText("Add");
        botao_add_especie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botao_add_especieActionPerformed(evt);
            }
        });

        botao_atualizar_especie.setText("Atualizar");
        botao_atualizar_especie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botao_atualizar_especieActionPerformed(evt);
            }
        });

        botao_alterar.setText("Alterar");
        botao_alterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botao_alterarActionPerformed(evt);
            }
        });

        botao_excluir_jtable1.setText("Excluir");
        botao_excluir_jtable1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botao_excluir_jtable1ActionPerformed(evt);
            }
        });

        botao_excluir_mercadoria.setText("Excluir");
        botao_excluir_mercadoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botao_excluir_mercadoriaActionPerformed(evt);
            }
        });

        botao_excluir_especie.setText("Excluir");
        botao_excluir_especie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botao_excluir_especieActionPerformed(evt);
            }
        });

        jLabel23.setText("Observações:");

        jScrollPane14.setViewportView(tpObservacao);

        javax.swing.GroupLayout jpPescadoSubprodutoLayout = new javax.swing.GroupLayout(jpPescadoSubproduto);
        jpPescadoSubproduto.setLayout(jpPescadoSubprodutoLayout);
        jpPescadoSubprodutoLayout.setHorizontalGroup(
            jpPescadoSubprodutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpPescadoSubprodutoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel26)
                .addContainerGap(704, Short.MAX_VALUE))
            .addGroup(jpPescadoSubprodutoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel38)
                .addContainerGap(691, Short.MAX_VALUE))
            .addGroup(jpPescadoSubprodutoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel27)
                .addGap(209, 209, 209))
            .addGroup(jpPescadoSubprodutoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel39)
                .addContainerGap(546, Short.MAX_VALUE))
            .addGroup(jpPescadoSubprodutoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel36)
                .addContainerGap(582, Short.MAX_VALUE))
            .addGroup(jpPescadoSubprodutoLayout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(jpPescadoSubprodutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpPescadoSubprodutoLayout.createSequentialGroup()
                        .addComponent(jLabel35)
                        .addContainerGap())
                    .addGroup(jpPescadoSubprodutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jpPescadoSubprodutoLayout.createSequentialGroup()
                            .addComponent(jLabel32)
                            .addContainerGap())
                        .addGroup(jpPescadoSubprodutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpPescadoSubprodutoLayout.createSequentialGroup()
                                .addGroup(jpPescadoSubprodutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel30)
                                    .addComponent(jLabel28))
                                .addContainerGap())
                            .addGroup(jpPescadoSubprodutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jpPescadoSubprodutoLayout.createSequentialGroup()
                                    .addComponent(jLabel29)
                                    .addContainerGap())
                                .addGroup(jpPescadoSubprodutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jpPescadoSubprodutoLayout.createSequentialGroup()
                                        .addComponent(jLabel31)
                                        .addContainerGap())
                                    .addGroup(jpPescadoSubprodutoLayout.createSequentialGroup()
                                        .addGroup(jpPescadoSubprodutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jScrollPane24, javax.swing.GroupLayout.DEFAULT_SIZE, 922, Short.MAX_VALUE)
                                            .addComponent(jScrollPane25, javax.swing.GroupLayout.DEFAULT_SIZE, 922, Short.MAX_VALUE)
                                            .addComponent(jScrollPane20, javax.swing.GroupLayout.DEFAULT_SIZE, 922, Short.MAX_VALUE)
                                            .addComponent(jScrollPane18, javax.swing.GroupLayout.DEFAULT_SIZE, 922, Short.MAX_VALUE)
                                            .addComponent(jScrollPane19, javax.swing.GroupLayout.DEFAULT_SIZE, 922, Short.MAX_VALUE)
                                            .addComponent(jScrollPane22, javax.swing.GroupLayout.DEFAULT_SIZE, 922, Short.MAX_VALUE)
                                            .addComponent(jScrollPane21, javax.swing.GroupLayout.DEFAULT_SIZE, 922, Short.MAX_VALUE)
                                            .addGroup(jpPescadoSubprodutoLayout.createSequentialGroup()
                                                .addComponent(jLabel34)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 483, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jScrollPane23, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 922, Short.MAX_VALUE)
                                            .addGroup(jpPescadoSubprodutoLayout.createSequentialGroup()
                                                .addComponent(jLabel33)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 657, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jpPescadoSubprodutoLayout.createSequentialGroup()
                                                .addComponent(jLabel37)
                                                .addGap(554, 554, 554))
                                            .addGroup(jpPescadoSubprodutoLayout.createSequentialGroup()
                                                .addComponent(jLabel40)
                                                .addGap(330, 330, 330))
                                            .addComponent(jScrollPane29, javax.swing.GroupLayout.DEFAULT_SIZE, 922, Short.MAX_VALUE)
                                            .addComponent(jScrollPane27, javax.swing.GroupLayout.DEFAULT_SIZE, 922, Short.MAX_VALUE)
                                            .addComponent(jScrollPane28, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 922, Short.MAX_VALUE)
                                            .addComponent(jScrollPane26, javax.swing.GroupLayout.DEFAULT_SIZE, 922, Short.MAX_VALUE)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpPescadoSubprodutoLayout.createSequentialGroup()
                                                .addComponent(botao_salvar_questionario)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(botao_alterar)))
                                        .addGap(48, 48, 48))))))))
            .addGroup(jpPescadoSubprodutoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane17, javax.swing.GroupLayout.DEFAULT_SIZE, 920, Short.MAX_VALUE)
                .addGap(48, 48, 48))
            .addGroup(jpPescadoSubprodutoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpPescadoSubprodutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpPescadoSubprodutoLayout.createSequentialGroup()
                        .addGroup(jpPescadoSubprodutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane13, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 866, Short.MAX_VALUE)
                            .addGroup(jpPescadoSubprodutoLayout.createSequentialGroup()
                                .addComponent(botao_mercado)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(botao_excluir_mercadoria)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(botao_atualizar_mercado)
                                .addGap(3, 3, 3))
                            .addComponent(jScrollPane11, javax.swing.GroupLayout.DEFAULT_SIZE, 866, Short.MAX_VALUE)
                            .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 866, Short.MAX_VALUE)
                            .addComponent(jScrollPane12, javax.swing.GroupLayout.DEFAULT_SIZE, 866, Short.MAX_VALUE))
                        .addGap(102, 102, 102))
                    .addGroup(jpPescadoSubprodutoLayout.createSequentialGroup()
                        .addGroup(jpPescadoSubprodutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpPescadoSubprodutoLayout.createSequentialGroup()
                                .addComponent(ckbConsumidor)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ckbRestaurante))
                            .addComponent(jLabel22))
                        .addGap(3, 3, 3)
                        .addComponent(ckbSupemercados)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ckbRevendedores)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ckbFeiras)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ckbOutros_principaisClientes)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfOutros_principaisClientes, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jpPescadoSubprodutoLayout.createSequentialGroup()
                        .addGroup(jpPescadoSubprodutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jpPescadoSubprodutoLayout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbNomeAtravessador, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel9)
                            .addGroup(jpPescadoSubprodutoLayout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ckbPeixeInteiro)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfOutrasFormasDeComercializacaoPeixe, javax.swing.GroupLayout.DEFAULT_SIZE, 534, Short.MAX_VALUE))
                            .addComponent(jLabel12)
                            .addGroup(jpPescadoSubprodutoLayout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ckbSempreDosMesmos))
                            .addComponent(jLabel1)
                            .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 456, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(99, Short.MAX_VALUE))
                    .addComponent(jLabel3)
                    .addGroup(jpPescadoSubprodutoLayout.createSequentialGroup()
                        .addComponent(jLabel21)
                        .addContainerGap(840, Short.MAX_VALUE))
                    .addGroup(jpPescadoSubprodutoLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addContainerGap())
                    .addGroup(jpPescadoSubprodutoLayout.createSequentialGroup()
                        .addComponent(jLabel24)
                        .addGap(548, 548, 548))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpPescadoSubprodutoLayout.createSequentialGroup()
                        .addComponent(jScrollPane16, javax.swing.GroupLayout.DEFAULT_SIZE, 920, Short.MAX_VALUE)
                        .addGap(48, 48, 48))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpPescadoSubprodutoLayout.createSequentialGroup()
                        .addGroup(jpPescadoSubprodutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 871, Short.MAX_VALUE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 871, Short.MAX_VALUE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 871, Short.MAX_VALUE)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 871, Short.MAX_VALUE)
                            .addComponent(jScrollPane7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 871, Short.MAX_VALUE)
                            .addComponent(jScrollPane9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 871, Short.MAX_VALUE)
                            .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel20, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 871, Short.MAX_VALUE)
                            .addGroup(jpPescadoSubprodutoLayout.createSequentialGroup()
                                .addComponent(botao_add_atravessador)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(botao_excluir_jtable1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(botao_material_atualizar))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 712, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(97, 97, 97))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpPescadoSubprodutoLayout.createSequentialGroup()
                        .addGroup(jpPescadoSubprodutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING))
                        .addContainerGap(719, Short.MAX_VALUE))
                    .addGroup(jpPescadoSubprodutoLayout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 722, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
            .addGroup(jpPescadoSubprodutoLayout.createSequentialGroup()
                .addGroup(jpPescadoSubprodutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jpPescadoSubprodutoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(botao_add_especie)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botao_excluir_especie)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botao_atualizar_especie))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jpPescadoSubprodutoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane15, javax.swing.GroupLayout.PREFERRED_SIZE, 856, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(112, Short.MAX_VALUE))
            .addGroup(jpPescadoSubprodutoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel23)
                .addContainerGap(901, Short.MAX_VALUE))
            .addGroup(jpPescadoSubprodutoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(555, Short.MAX_VALUE))
        );
        jpPescadoSubprodutoLayout.setVerticalGroup(
            jpPescadoSubprodutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpPescadoSubprodutoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jpPescadoSubprodutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(cbNomeAtravessador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addGroup(jpPescadoSubprodutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(ckbSempreDosMesmos))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpPescadoSubprodutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(ckbPeixeInteiro)
                    .addComponent(tfOutrasFormasDeComercializacaoPeixe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12)
                .addGap(3, 3, 3)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpPescadoSubprodutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botao_material_atualizar)
                    .addComponent(botao_excluir_jtable1)
                    .addComponent(botao_add_atravessador))
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addGap(13, 13, 13)
                .addComponent(jLabel5)
                .addGap(9, 9, 9)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addGroup(jpPescadoSubprodutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpPescadoSubprodutoLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(111, 111, 111)
                        .addComponent(jLabel7))
                    .addGroup(jpPescadoSubprodutoLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jpPescadoSubprodutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpPescadoSubprodutoLayout.createSequentialGroup()
                        .addGap(111, 111, 111)
                        .addComponent(jLabel21))
                    .addGroup(jpPescadoSubprodutoLayout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpPescadoSubprodutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botao_excluir_mercadoria)
                    .addComponent(botao_atualizar_mercado)
                    .addComponent(botao_mercado, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addComponent(jLabel22)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpPescadoSubprodutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ckbConsumidor)
                    .addComponent(ckbRestaurante)
                    .addComponent(ckbSupemercados)
                    .addComponent(ckbRevendedores)
                    .addComponent(ckbFeiras)
                    .addComponent(ckbOutros_principaisClientes)
                    .addComponent(tfOutros_principaisClientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel24)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane15, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jpPescadoSubprodutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpPescadoSubprodutoLayout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addComponent(jLabel26))
                    .addGroup(jpPescadoSubprodutoLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpPescadoSubprodutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(botao_atualizar_especie)
                            .addComponent(botao_excluir_especie)
                            .addComponent(botao_add_especie, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane16, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel27)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane17, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel38)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane26, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel39)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane24, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel36)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane25, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel31)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane20, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel29)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane18, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel28)
                .addGap(4, 4, 4)
                .addComponent(jLabel30)
                .addGap(1, 1, 1)
                .addComponent(jScrollPane19, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel32)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane22, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel35)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane21, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel34)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane23, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel33)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane28, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel37)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane27, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel40)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane29, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel23)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(jpPescadoSubprodutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botao_alterar)
                    .addComponent(botao_salvar_questionario))
                .addContainerGap())
        );

        jScrollPane1.setViewportView(jpPescadoSubproduto);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 987, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 987, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 750, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 750, Short.MAX_VALUE))
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-1003)/2, (screenSize.height-788)/2, 1003, 788);
    }// </editor-fold>//GEN-END:initComponents

    private void cbNomeAtravessadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbNomeAtravessadorActionPerformed
       
        //Pesquisa automática do Combo Box Nome do atravessador
        
        if (inicia_combo == 1){
         try {
            conexao.execute("select * from atravessador_questionario");
            conexao.resultSet.first();
            String igual = "n"; //inicia dizendo que não localizou
            while(igual == "n") //diz que enquanto não localizar é para ir executando
            {
                String id = pega_codigo_ou_nome(1,cbNomeAtravessador.getSelectedItem().toString());
                if (conexao.resultSet.getString("id_atravessador").equals(id)) {
                    igual = "s"; //incica que achou
                } else
                    conexao.resultSet.next();
            }
            //nas linhas abaixo, mostra_conteudo_tabela();
             mostra_dados();


        } catch (SQLException ex) {
            limpar_dados();
            System.out.println(ex+" Erro na pesquisa de nome");
            }
        }inicia_combo = 1;
         
    }//GEN-LAST:event_cbNomeAtravessadorActionPerformed

    private void botao_add_atravessadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botao_add_atravessadorActionPerformed
        new addMaterial(pega_codigo_ou_nome(1,cbNomeAtravessador.getSelectedItem().toString())).setVisible(true);
}//GEN-LAST:event_botao_add_atravessadorActionPerformed

    private void botao_material_atualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botao_material_atualizarActionPerformed
        conexao.execute("select * from atravessador_addmaterial where id_atravessador="
                            +pega_codigo_ou_nome(1,cbNomeAtravessador.getSelectedItem().toString())+"");
        preencher_jtable();
        conexao.execute("select * from atravessador_cadastro");
}//GEN-LAST:event_botao_material_atualizarActionPerformed

    private void fechar_janela(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_fechar_janela
        conexao.desconecta();
    }//GEN-LAST:event_fechar_janela

    private void tfOutros_principaisClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfOutros_principaisClientesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfOutros_principaisClientesActionPerformed

    private void botao_salvar_questionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botao_salvar_questionarioActionPerformed
        int[] ckb = new int[9];
             
        if (ckbSempreDosMesmos.isSelected()){
            ckb[0] = 1;
        }else
            ckb[0] = 0;
        
        if (ckbPeixeInteiro.isSelected()){
            ckb[1] = 1;
        }else
            ckb[1] = 0;
        if (ckbConsumidor.isSelected()){
            ckb[2] = 1;
        }else
            ckb[2] = 0;
        if (ckbRestaurante.isSelected()){
            ckb[3] = 1;
        }else
            ckb[3] = 0;
        if (ckbSupemercados.isSelected()){
            ckb[4] = 1;
        }else
            ckb[4] = 0;
        if (ckbRevendedores.isSelected()){
            ckb[5] = 1;
        }else
            ckb[5] = 0;
        if (ckbFeiras.isSelected()){
            ckb[6] = 1;
        }else
            ckb[6] = 0;
        if (ckbOutros_principaisClientes.isSelected()){
            ckb[7] = 1;
        }else
            ckb[7] = 0;

        //System.out.println(a);


        try {
            String sqlinsert = "insert into atravessador_questionario "
                    + "(id_atravessador,nome_atravessador,origem_produto,"
                    + "sempre_dos_mesmos_pesc,peixe_inteiro,criterios_qualidade_produto,"
                    + "exigencia_pescado_subprodutos,como_func_recepcao,"
                    + "como_func_armazenamento,como_funf_comercializacao,"
                    + "dificuldades_para_manter_e_solucoes,possui_cliente_consumidor,"
                    + "possui_cliente_restaurante,possui_cliente_supermercados,"
                    + "possui_cliente_revendedores,possui_cliente_feiras,"
                    + "possui_cliente_outros,possui_cliente_outros_quais,"
                    + "sempre_vende_pros_mesmos,exigencias_compradores,"
                    + "como_negocia,cede_adiantamento,situacao_obriga_entregar_prod,"
                    + "existe_interacao,grau_competitividade,atuacao_instituicoes_sua_relacao,"
                    + "estoque_continua_estavel,pescado_diminuindo_mot_mudanca,"
                    + "numero_aumentou_o_que_acha,perspectiva,pretende_continuar,"
                    + "desejo_para_filhos,sempre_dos_mesmos_pesc_quais,observacao) values ("+
                    pega_codigo_ou_nome(1,cbNomeAtravessador.getSelectedItem().toString())+",'"+
                    pega_codigo_ou_nome(0,cbNomeAtravessador.getSelectedItem().toString())+"','"+
                    taOrigemProduto.getText()+"',"+
                    ckb[0]+","+
                    ckb[1]+",'"+
                    taCriterioQualidadeProduto.getText()+"','"+
                    taExigenciaCompraPescado.getText()+"','"+
                    taRecepcao.getText()+"','"+
                    taArmazenamento.getText()+"','"+
                    taComercializacao.getText()+"','"+
                    tpDificuldadesEncontradas.getText()+"',"+
                    ckb[2]+","+
                    ckb[3]+","+
                    ckb[4]+","+
                    ckb[5]+","+
                    ckb[6]+","+
                    ckb[7]+",'"+
                    tfOutros_principaisClientes.getText()+"','"+
                    tpSempreMesmoCompradores.getText()+"','"+
                    tpExigenciasCompradores.getText()+"','"+
                    tpComoNegocia.getText()+"','"+
                    tpCedeAdiantamento.getText()+"','"+
                    tpSitObrigaEntregar.getText()+"','"+
                    tpExisteIteracao.getText()+"','"+
                    tpGrauCompetitividade.getText()+"','"+
                    tpAtuacaoInstituicoesSuaRelacao.getText()+"','"+
                    tpEstoqueContEstavel.getText()+"','"+
                    tpTamanhoPescadoDiminuindo.getText()+"','"+
                    tpNumeroFornecedoresAumentou.getText()+"','"+
                    tpPerspectiva.getText()+"','"+
                    tpContinuarAtividade.getText()+"','"+
                    tpDesejoFilhos.getText()+"','"+
                    //aqui só mudanças
                    tfOutrasFormasDeComercializacaoPeixe.getText()+"','"+//sempre_dos_mesmos_pesc_quais
                    tpObservacao.getText()+"')";//observacao

                    System.out.println(sqlinsert);

            if (conexao.salvar(sqlinsert)){
            //agora é hora de atualizar o resultset
            conexao.execute("select * from atravessador_questionario");
            conexao.resultSet.first(); //1º registro
            mostra_dados();
            cbNomeAtravessador.setSelectedIndex(0);
            }

        }catch (SQLException erro){
            System.out.println(erro);
        }
    }//GEN-LAST:event_botao_salvar_questionarioActionPerformed

    private void ckbOutros_principaisClientesStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ckbOutros_principaisClientesStateChanged
        if (ckbOutros_principaisClientes.isSelected()){ // Marcar outros e deixar o TF ser editado
            tfOutros_principaisClientes.setEditable(true);
        }
        else{
            tfOutros_principaisClientes.setEditable(false);
            tfOutros_principaisClientes.setText("");
        }
    }//GEN-LAST:event_ckbOutros_principaisClientesStateChanged

    private void botao_mercadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botao_mercadoActionPerformed
        new addProduto_MercadoLocal(pega_codigo_ou_nome(1,cbNomeAtravessador.getSelectedItem().toString())).setVisible(true);
    }//GEN-LAST:event_botao_mercadoActionPerformed

    private void botao_atualizar_mercadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botao_atualizar_mercadoActionPerformed
        //Atualiza A primeira tabela Mercado Local
        conexao.execute("select * from atravessador_addmercado where id_atravessador="
                        +pega_codigo_ou_nome(1,cbNomeAtravessador.getSelectedItem().toString())+" "
                        + "and mercado='Mercado Local'");
        preencher_jtableMercado(jtMercadoLocal);
        conexao.execute("select * from atravessador_cadastro");
        
        //Atualiza A segunda tabela Mercado Estadual
        conexao.execute("select * from atravessador_addmercado where id_atravessador="
                        +pega_codigo_ou_nome(1,cbNomeAtravessador.getSelectedItem().toString())+" "
                        + "and mercado='Mercado Estadual'");
        preencher_jtableMercado(jtMercadoEstadual);
        conexao.execute("select * from atravessador_cadastro");
        
        //Atualiza A terceira tabela Mercado Nacional
        conexao.execute("select * from atravessador_addmercado where id_atravessador="
                        +pega_codigo_ou_nome(1,cbNomeAtravessador.getSelectedItem().toString())+" "
                        + "and mercado='Mercado Nacional'");
        preencher_jtableMercado(jtMercadoNacional);
        conexao.execute("select * from atravessador_cadastro");
        
        //Atualiza A primeira tabela Mercado Internacional
        conexao.execute("select * from atravessador_addmercado where id_atravessador="
                        +pega_codigo_ou_nome(1,cbNomeAtravessador.getSelectedItem().toString())+" "
                        + "and mercado='Mercado Internacional'");
        preencher_jtableMercado(jtMercadoInternacional);
        conexao.execute("select * from atravessador_cadastro");
    }//GEN-LAST:event_botao_atualizar_mercadoActionPerformed

    private void botao_add_especieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botao_add_especieActionPerformed
        new addEspecie(pega_codigo_ou_nome(1,cbNomeAtravessador.getSelectedItem().toString())).setVisible(true);
    }//GEN-LAST:event_botao_add_especieActionPerformed

    private void botao_atualizar_especieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botao_atualizar_especieActionPerformed
       conexao.execute("select * from atravessador_addespecie where id_atravessador="
                        +pega_codigo_ou_nome(1,cbNomeAtravessador.getSelectedItem().toString())+"");
        preencher_jtableEspecie();
        conexao.execute("select * from atravessador_cadastro");
    }//GEN-LAST:event_botao_atualizar_especieActionPerformed

    private void botao_alterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botao_alterarActionPerformed
        // Codigo para alterar os dados do BD
int[] ckb = new int[9];

        if (ckbSempreDosMesmos.isSelected()){
            ckb[0] = 1;
        }else
            ckb[0] = 0;

        if (ckbPeixeInteiro.isSelected()){
            ckb[1] = 1;
        }else
            ckb[1] = 0;
        if (ckbConsumidor.isSelected()){
            ckb[2] = 1;
        }else
            ckb[2] = 0;
        if (ckbRestaurante.isSelected()){
            ckb[3] = 1;
        }else
            ckb[3] = 0;
        if (ckbSupemercados.isSelected()){
            ckb[4] = 1;
        }else
            ckb[4] = 0;
        if (ckbRevendedores.isSelected()){
            ckb[5] = 1;
        }else
            ckb[5] = 0;
        if (ckbFeiras.isSelected()){
            ckb[6] = 1;
        }else
            ckb[6] = 0;
        if (ckbOutros_principaisClientes.isSelected()){
            ckb[7] = 1;
        }else
            ckb[7] = 0;


        try{
            String sql ="UPDATE atravessador_questionario SET "+
                          "origem_produto = '"+taOrigemProduto.getText()+"',"+
                          "sempre_dos_mesmos_pesc = '"+ ckb[0] +"',"+
                          "peixe_inteiro = '"+ ckb[1] +"',"+
                          "criterios_qualidade_produto = '"+ taCriterioQualidadeProduto.getText() +"',"+
                          "exigencia_pescado_subprodutos = '"+ taExigenciaCompraPescado.getText() +"',"+
                          "como_func_recepcao = '"+ taRecepcao.getText() +"',"+
                          "como_func_armazenamento = '"+ taArmazenamento.getText() +"',"+
                          "como_funf_comercializacao = '"+ taComercializacao.getText() +"',"+
                          "dificuldades_para_manter_e_solucoes = '"+ tpDificuldadesEncontradas.getText() +"',"+
                          "possui_cliente_consumidor = '"+ ckb[2] +"',"+
                          "possui_cliente_restaurante = '"+ ckb[3] +"',"+
                          "possui_cliente_supermercados = '"+ ckb[4] +"',"+
                          "possui_cliente_revendedores = '"+ ckb[5] +"',"+
                          "possui_cliente_feiras = '"+ ckb[6] +"',"+
                          "possui_cliente_outros = '"+ ckb[7] +"',"+
                          "possui_cliente_outros_quais = '"+ tfOutros_principaisClientes.getText() +"',"+
                          "sempre_vende_pros_mesmos = '"+ tpSempreMesmoCompradores.getText() +"',"+
                          "exigencias_compradores = '"+ tpExigenciasCompradores.getText() +"',"+
                          "como_negocia = '"+ tpComoNegocia.getText() +"',"+
                          "cede_adiantamento = '"+ tpCedeAdiantamento.getText() +"',"+
                          "situacao_obriga_entregar_prod = '"+ tpSitObrigaEntregar.getText() +"',"+
                          "existe_interacao = '"+ tpExisteIteracao.getText() +"',"+
                          "grau_competitividade = '"+ tpGrauCompetitividade.getText() +"',"+
                          "atuacao_instituicoes_sua_relacao = '"+ tpAtuacaoInstituicoesSuaRelacao.getText() +"',"+
                          "estoque_continua_estavel = '"+ tpEstoqueContEstavel.getText() +"',"+
                          "pescado_diminuindo_mot_mudanca = '"+ tpTamanhoPescadoDiminuindo.getText() +"',"+
                          "numero_aumentou_o_que_acha = '"+ tpNumeroFornecedoresAumentou.getText() +"',"+
                          "perspectiva = '"+ tpPerspectiva.getText() +"',"+
                          "pretende_continuar = '"+ tpContinuarAtividade.getText() +"',"+
                          "desejo_para_filhos = '"+ tpDesejoFilhos.getText() +"',"+


                          "sempre_dos_mesmos_pesc_quais = '"+ tfOutrasFormasDeComercializacaoPeixe.getText() +"',"+
                          "observacao = '"+ tpObservacao.getText() +"' "+


                          "where id_atravessador = "+pega_codigo_ou_nome(1,cbNomeAtravessador.getSelectedItem().toString());

            System.out.println(sql);
            if (conexao.update(sql)){
            JOptionPane.showMessageDialog(null,"Alterado com sucesso");
            //Atualiza Resultset
            conexao.execute("select * from atravessador_questionario");
            conexao.resultSet.next();
            mostra_dados();
            cbNomeAtravessador.setSelectedIndex(0);
            }


        }catch (Exception e){
            System.out.println(e + "Erro no botão alterar");
        }
    }//GEN-LAST:event_botao_alterarActionPerformed

    private void botao_excluir_jtable1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botao_excluir_jtable1ActionPerformed
        // TODO add your handling code here:
        System.out.println(jTable1.getValueAt(jTable1.getSelectedRow(),0));
        //.removeRow(jTable1.getSelectedRow());
                String sql;

            sql = "delete from atravessador_addmaterial Where id_material =" + jTable1.getValueAt(jTable1.getSelectedRow(),0);

                if (conexao.salvar(sql)) {
                    System.out.println("Exclusão realizada com sucesso");
                    //exibe o jTable1
                    conexao.execute("select * from atravessador_addmaterial where id_atravessador="
                            +pega_codigo_ou_nome(1,cbNomeAtravessador.getSelectedItem().toString())+"");
                    preencher_jtable();
                    conexao.execute("select * from atravessador_cadastro");

                }else{
                JOptionPane.showMessageDialog(null,"Erro na exclusão");

                   
                }




    }//GEN-LAST:event_botao_excluir_jtable1ActionPerformed

    private void botao_excluir_mercadoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botao_excluir_mercadoriaActionPerformed
        // TODO add your handling code here:
        String id_pra_excluir = "";

        if (jtMercadoEstadual.getSelectedRow() != -1){
            id_pra_excluir = jtMercadoEstadual.getValueAt(jtMercadoEstadual.getSelectedRow(),0).toString()+"";
        }

        if (jtMercadoInternacional.getSelectedRow() != -1){
            id_pra_excluir = jtMercadoInternacional.getValueAt(jtMercadoInternacional.getSelectedRow(),0).toString()+"";
        }

        if (jtMercadoLocal.getSelectedRow() != -1){
            id_pra_excluir = jtMercadoLocal.getValueAt(jtMercadoLocal.getSelectedRow(),0).toString()+"";
        }

        if (jtMercadoNacional.getSelectedRow() != -1){
            id_pra_excluir = jtMercadoNacional.getValueAt(jtMercadoNacional.getSelectedRow(),0).toString()+"";
        }

        System.out.println(id_pra_excluir);
        
        String sql;

        sql = "delete from atravessador_addmercado Where id_mercado =" + id_pra_excluir;

                if (conexao.salvar(sql)) {
                    System.out.println("Exclusão realizada com sucesso");
                    //exibe o jTable1
                    exibir_L_E_N_I(0);exibir_L_E_N_I(1);exibir_L_E_N_I(2);exibir_L_E_N_I(3);

                }else{
                JOptionPane.showMessageDialog(null,"Erro na exclusão");


                }
    }//GEN-LAST:event_botao_excluir_mercadoriaActionPerformed

    private void botao_excluir_especieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botao_excluir_especieActionPerformed
        // TODO add your handling code here:
        System.out.println(jtEspecie.getValueAt(jtEspecie.getSelectedRow(),0));
        //.removeRow(jTable1.getSelectedRow());
                String sql;

            sql = "delete from atravessador_addespecie Where id_especie =" + jtEspecie.getValueAt(jtEspecie.getSelectedRow(),0);

                if (conexao.salvar(sql)) {
                    System.out.println("Exclusão realizada com sucesso");
                    //exibe
                    conexao.execute("select * from atravessador_addespecie where id_atravessador="
                        +pega_codigo_ou_nome(1,cbNomeAtravessador.getSelectedItem().toString())+"");
                    preencher_jtableEspecie();
                    conexao.execute("select * from atravessador_cadastro");

                }else{
                JOptionPane.showMessageDialog(null,"Erro na exclusão");


                }


    }//GEN-LAST:event_botao_excluir_especieActionPerformed

    private void jtMercadoLocalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtMercadoLocalMouseClicked
            
    }//GEN-LAST:event_jtMercadoLocalMouseClicked

    private void jtMercadoEstadualMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtMercadoEstadualMouseClicked
           
    }//GEN-LAST:event_jtMercadoEstadualMouseClicked

    private void jtMercadoNacionalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtMercadoNacionalMouseClicked
            
    }//GEN-LAST:event_jtMercadoNacionalMouseClicked

    private void jtMercadoInternacionalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtMercadoInternacionalMouseClicked
            
    }//GEN-LAST:event_jtMercadoInternacionalMouseClicked

    private void jtMercadoLocalFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtMercadoLocalFocusGained
        // TODO add your handling code here:
            exibir_L_E_N_I(1);
            exibir_L_E_N_I(2);
            exibir_L_E_N_I(3);
    }//GEN-LAST:event_jtMercadoLocalFocusGained

    private void jtMercadoEstadualFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtMercadoEstadualFocusGained
            exibir_L_E_N_I(0);
            exibir_L_E_N_I(2);
            exibir_L_E_N_I(3);
    }//GEN-LAST:event_jtMercadoEstadualFocusGained

    private void jtMercadoNacionalFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtMercadoNacionalFocusGained
            exibir_L_E_N_I(0);
            exibir_L_E_N_I(1);
            exibir_L_E_N_I(3);
    }//GEN-LAST:event_jtMercadoNacionalFocusGained

    private void jtMercadoInternacionalFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtMercadoInternacionalFocusGained
            exibir_L_E_N_I(0);
            exibir_L_E_N_I(1);
            exibir_L_E_N_I(2);
    }//GEN-LAST:event_jtMercadoInternacionalFocusGained

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frm_questionario_atravessador().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botao_add_atravessador;
    private javax.swing.JButton botao_add_especie;
    private javax.swing.JButton botao_alterar;
    private javax.swing.JButton botao_atualizar_especie;
    private javax.swing.JButton botao_atualizar_mercado;
    private javax.swing.JButton botao_excluir_especie;
    private javax.swing.JButton botao_excluir_jtable1;
    private javax.swing.JButton botao_excluir_mercadoria;
    private javax.swing.JButton botao_material_atualizar;
    private javax.swing.JButton botao_mercado;
    private javax.swing.JButton botao_salvar_questionario;
    private javax.swing.JComboBox cbNomeAtravessador;
    private javax.swing.JCheckBox ckbConsumidor;
    private javax.swing.JCheckBox ckbFeiras;
    private javax.swing.JCheckBox ckbOutros_principaisClientes;
    private javax.swing.JCheckBox ckbPeixeInteiro;
    private javax.swing.JCheckBox ckbRestaurante;
    private javax.swing.JCheckBox ckbRevendedores;
    private javax.swing.JCheckBox ckbSempreDosMesmos;
    private javax.swing.JCheckBox ckbSupemercados;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JScrollPane jScrollPane16;
    private javax.swing.JScrollPane jScrollPane17;
    private javax.swing.JScrollPane jScrollPane18;
    private javax.swing.JScrollPane jScrollPane19;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane20;
    private javax.swing.JScrollPane jScrollPane21;
    private javax.swing.JScrollPane jScrollPane22;
    private javax.swing.JScrollPane jScrollPane23;
    private javax.swing.JScrollPane jScrollPane24;
    private javax.swing.JScrollPane jScrollPane25;
    private javax.swing.JScrollPane jScrollPane26;
    private javax.swing.JScrollPane jScrollPane27;
    private javax.swing.JScrollPane jScrollPane28;
    private javax.swing.JScrollPane jScrollPane29;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTable jTable1;
    private javax.swing.JPanel jpPescadoSubproduto;
    private javax.swing.JTable jtEspecie;
    private javax.swing.JTable jtMercadoEstadual;
    private javax.swing.JTable jtMercadoInternacional;
    private javax.swing.JTable jtMercadoLocal;
    private javax.swing.JTable jtMercadoNacional;
    private javax.swing.JTextArea taArmazenamento;
    private javax.swing.JTextArea taComercializacao;
    private javax.swing.JTextArea taCriterioQualidadeProduto;
    private javax.swing.JTextArea taExigenciaCompraPescado;
    private javax.swing.JTextArea taOrigemProduto;
    private javax.swing.JTextArea taRecepcao;
    private javax.swing.JTextField tfOutrasFormasDeComercializacaoPeixe;
    private javax.swing.JTextField tfOutros_principaisClientes;
    private javax.swing.JTextPane tpAtuacaoInstituicoesSuaRelacao;
    private javax.swing.JTextPane tpCedeAdiantamento;
    private javax.swing.JTextPane tpComoNegocia;
    private javax.swing.JTextPane tpContinuarAtividade;
    private javax.swing.JTextPane tpDesejoFilhos;
    private javax.swing.JTextPane tpDificuldadesEncontradas;
    private javax.swing.JTextPane tpEstoqueContEstavel;
    private javax.swing.JTextPane tpExigenciasCompradores;
    private javax.swing.JTextPane tpExisteIteracao;
    private javax.swing.JTextPane tpGrauCompetitividade;
    private javax.swing.JTextPane tpNumeroFornecedoresAumentou;
    private javax.swing.JTextPane tpObservacao;
    private javax.swing.JTextPane tpPerspectiva;
    private javax.swing.JTextPane tpSempreMesmoCompradores;
    private javax.swing.JTextPane tpSitObrigaEntregar;
    private javax.swing.JTextPane tpTamanhoPescadoDiminuindo;
    // End of variables declaration//GEN-END:variables

        public void preencher_jtable(){
        jTable1.getColumnModel().getColumn(0).setMaxWidth(0);
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(0);
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(40);
        jTable1.getColumnModel().getColumn(2).setPreferredWidth(10);
        jTable1.getColumnModel().getColumn(3).setPreferredWidth(10);
        jTable1.getColumnModel().getColumn(4).setPreferredWidth(10);
        jTable1.getColumnModel().getColumn(5).setPreferredWidth(10);
        jTable1.getColumnModel().getColumn(6).setPreferredWidth(10);

        DefaultTableModel modelo = (DefaultTableModel)jTable1.getModel();
        modelo.setNumRows(0);//limpa o JTable1;

        try{
            while (conexao.resultSet.next())
                modelo.addRow(new Object[]{conexao.resultSet.getString("id_material"),
                                           conexao.resultSet.getString("nome"),
                                           conexao.resultSet.getString("tipo"),
                                           conexao.resultSet.getString("quantidade"),
                                           conexao.resultSet.getString("custo"),
                                           conexao.resultSet.getString("outros"),
                                           conexao.resultSet.getString("frequencia")});

            conexao.resultSet.first();
        }catch (SQLException erro){
            System.out.println(erro);
        }



    }

    public void mostra_dados(){
        try {
            //Exibir os text areas
            taOrigemProduto.setText(conexao.resultSet.getString("origem_produto"));
            taCriterioQualidadeProduto.setText(conexao.resultSet.getString("criterios_qualidade_produto"));
            taExigenciaCompraPescado.setText(conexao.resultSet.getString("exigencia_pescado_subprodutos"));
            taRecepcao.setText(conexao.resultSet.getString("como_func_recepcao"));
            taArmazenamento.setText(conexao.resultSet.getString("como_func_armazenamento"));
            taComercializacao.setText(conexao.resultSet.getString("como_funf_comercializacao"));

           tpDificuldadesEncontradas.setText(conexao.resultSet.getString("dificuldades_para_manter_e_solucoes"));
           tpSempreMesmoCompradores.setText(conexao.resultSet.getString("sempre_vende_pros_mesmos"));
           tpExigenciasCompradores.setText(conexao.resultSet.getString("exigencias_compradores"));
           tpComoNegocia.setText(conexao.resultSet.getString("como_negocia"));
           tpCedeAdiantamento.setText(conexao.resultSet.getString("cede_adiantamento"));
           tpSitObrigaEntregar.setText(conexao.resultSet.getString("situacao_obriga_entregar_prod"));
           tpExisteIteracao.setText(conexao.resultSet.getString("existe_interacao"));
           tpGrauCompetitividade.setText(conexao.resultSet.getString("grau_competitividade"));
           tpAtuacaoInstituicoesSuaRelacao.setText(conexao.resultSet.getString("atuacao_instituicoes_sua_relacao"));
           tpEstoqueContEstavel.setText(conexao.resultSet.getString("estoque_continua_estavel"));
           tpTamanhoPescadoDiminuindo.setText(conexao.resultSet.getString("pescado_diminuindo_mot_mudanca"));
           tpNumeroFornecedoresAumentou.setText(conexao.resultSet.getString("numero_aumentou_o_que_acha"));
           tpPerspectiva.setText(conexao.resultSet.getString("perspectiva"));
           tpContinuarAtividade.setText(conexao.resultSet.getString("pretende_continuar"));
           tpDesejoFilhos.setText(conexao.resultSet.getString("desejo_para_filhos"));
           tfOutros_principaisClientes.setText(conexao.resultSet.getString("possui_cliente_outros_quais"));

            //Selecionar os check boxes conforme o BD
            if (conexao.resultSet.getString("sempre_dos_mesmos_pesc").equals("1"))
                   ckbSempreDosMesmos.setSelected(true);
            else
                   ckbSempreDosMesmos.setSelected(false);

            if (conexao.resultSet.getString("peixe_inteiro").equals("1"))
                   ckbPeixeInteiro.setSelected(true);
            else
                   ckbPeixeInteiro.setSelected(false);

            if (conexao.resultSet.getString("possui_cliente_consumidor").equals("1"))
                   ckbConsumidor.setSelected(true);
            else
                   ckbConsumidor.setSelected(false);

            if (conexao.resultSet.getString("possui_cliente_restaurante").equals("1"))
                   ckbRestaurante.setSelected(true);
            else
                   ckbRestaurante.setSelected(false);

            if (conexao.resultSet.getString("possui_cliente_supermercados").equals("1"))
                   ckbSupemercados.setSelected(true);
            else
                   ckbSupemercados.setSelected(false);

            if (conexao.resultSet.getString("possui_cliente_revendedores").equals("1"))
                   ckbRevendedores.setSelected(true);
            else
                   ckbRevendedores.setSelected(false);

            if (conexao.resultSet.getString("possui_cliente_feiras").equals("1"))
                   ckbFeiras.setSelected(true);
            else
                   ckbFeiras.setSelected(false);

            if (conexao.resultSet.getString("possui_cliente_outros").equals("1"))
                   ckbOutros_principaisClientes.setSelected(true);
            else
                   ckbOutros_principaisClientes.setSelected(false);
        
           if (ckbOutros_principaisClientes.isSelected()){ // se outros estiver marcado, deixa editar
            tfOutros_principaisClientes.setEditable(true);
            }
           else
            tfOutros_principaisClientes.setEditable(false);

           //mudancas

           tfOutrasFormasDeComercializacaoPeixe.setText(conexao.resultSet.getString("sempre_dos_mesmos_pesc_quais"));
           tpObservacao.setText(conexao.resultSet.getString("observacao"));





        } catch (Exception e) {
            System.out.println(e + " metodo mostrar dados");
        }
    }

        public void limpar_dados(){
            taOrigemProduto.setText("");
            taCriterioQualidadeProduto.setText("");
            taExigenciaCompraPescado.setText("");
            taRecepcao.setText("");
            taArmazenamento.setText("");
            taComercializacao.setText("");

            tpDificuldadesEncontradas.setText("");
            ckbConsumidor.setSelected(false);
            ckbRestaurante.setSelected(false);
            ckbSupemercados.setSelected(false);
            ckbRevendedores.setSelected(false);
            ckbFeiras.setSelected(false);
            ckbOutros_principaisClientes.setSelected(false);

            tfOutros_principaisClientes.setText("");
            tpSempreMesmoCompradores.setText("");
            tpExigenciasCompradores.setText("");
            tpComoNegocia.setText("");
            tpCedeAdiantamento.setText("");
            tpSitObrigaEntregar.setText("");
            tpExisteIteracao.setText("");
            tpGrauCompetitividade.setText("");
            tpAtuacaoInstituicoesSuaRelacao.setText("");
            tpEstoqueContEstavel.setText("");
            tpTamanhoPescadoDiminuindo.setText("");

            tpNumeroFornecedoresAumentou.setText("");
            tpPerspectiva.setText("");
            tpContinuarAtividade.setText("");
            tpDesejoFilhos.setText("");
            
            ckbSempreDosMesmos.setSelected(false);
            ckbPeixeInteiro.setSelected(false);

            tfOutrasFormasDeComercializacaoPeixe.setText("");
            tpObservacao.setText("");
    }

        public String pega_codigo_ou_nome(int n,String teste) { //Se entrar com 1 pega o Código, se não pega o Nome
              //pegar a Id do atravessador
              
              //aqui ele pega a quantidade de carcteres que tem uma determinada variável
              //e armazena numa INT para usá-la de contador
              int contador = teste.length();

              //cria um for( para fazer uma varredura letra por letra até encontrar
              for(int i = 0;i<contador;i++){
                 //usamos substring pra pegar um caractere, passando como parâmetro,
                 //o primeiro caractere a ser pega, até a ultima.
                //fiz um if para verificar se o caractere é igual a "#"
                if (teste.substring(i,i+1).equals("#")){
                   int posicao = i+1;
                    System.out.println("Está na posição " + posicao);
                    if (n == 1){
                        return teste.substring(0,posicao-2);
                    }
                    else
                        return teste.substring(posicao+1,teste.length());
                }

              }
              return "nada";
        }

        public void preencher_jtableMercado(JTable table){
        table.getColumnModel().getColumn(0).setMaxWidth(0);
        table.getColumnModel().getColumn(0).setPreferredWidth(0);
        table.getColumnModel().getColumn(1).setPreferredWidth(40);
        table.getColumnModel().getColumn(2).setPreferredWidth(10);
        table.getColumnModel().getColumn(3).setPreferredWidth(10);
        table.getColumnModel().getColumn(4).setPreferredWidth(10);
        table.getColumnModel().getColumn(5).setPreferredWidth(10);

        DefaultTableModel modelo = (DefaultTableModel)table.getModel();
        modelo.setNumRows(0);//limpa o JTable;

        try{
            while (conexao.resultSet.next())
                modelo.addRow(new Object[]{conexao.resultSet.getString("id_mercado"),
                                           conexao.resultSet.getString("especie"),
                                           conexao.resultSet.getString("produto"),
                                           conexao.resultSet.getString("destino"),
                                           conexao.resultSet.getString("volume")+" "+conexao.resultSet.getString("unidade_volume"),
                                           conexao.resultSet.getString("preco")});

            conexao.resultSet.first();
        }catch (SQLException erro){
            System.out.println(erro);
        }



    }

                public void preencher_jtableEspecie(){
        jtEspecie.getColumnModel().getColumn(0).setMaxWidth(0);
        jtEspecie.getColumnModel().getColumn(0).setPreferredWidth(0);
        jtEspecie.getColumnModel().getColumn(1).setPreferredWidth(10);
        jtEspecie.getColumnModel().getColumn(2).setPreferredWidth(10);
        jtEspecie.getColumnModel().getColumn(3).setPreferredWidth(10);
        jtEspecie.getColumnModel().getColumn(4).setPreferredWidth(10);

        DefaultTableModel modelo = (DefaultTableModel)jtEspecie.getModel();
        modelo.setNumRows(0);//limpa o JTable;

        try{
            while (conexao.resultSet.next())
                modelo.addRow(new Object[]{conexao.resultSet.getString("id_especie"),
                                           conexao.resultSet.getString("especie"),
                                           conexao.resultSet.getString("causa_da_perda"),
                                           conexao.resultSet.getString("estimativa_da_perda"),
                                           conexao.resultSet.getString("destino_do_peixe_perdido")});

            conexao.resultSet.first();
        }catch (SQLException erro){
            System.out.println(erro);
        }
    }

    public void exibir_L_E_N_I(int i){
        if (i == 0){
        //Atualiza A primeira tabela Mercado Local
        conexao.execute("select * from atravessador_addmercado where id_atravessador="
                        +pega_codigo_ou_nome(1,cbNomeAtravessador.getSelectedItem().toString())+" "
                        + "and mercado='Mercado Local'");
        preencher_jtableMercado(jtMercadoLocal);
        conexao.execute("select * from atravessador_cadastro");
        } else if (i == 1){
        //Atualiza A segunda tabela Mercado Estadual
        conexao.execute("select * from atravessador_addmercado where id_atravessador="
                        +pega_codigo_ou_nome(1,cbNomeAtravessador.getSelectedItem().toString())+" "
                        + "and mercado='Mercado Estadual'");
        preencher_jtableMercado(jtMercadoEstadual);
        conexao.execute("select * from atravessador_cadastro");
        }else if (i == 2){
        //Atualiza A terceira tabela Mercado Nacional
        conexao.execute("select * from atravessador_addmercado where id_atravessador="
                        +pega_codigo_ou_nome(1,cbNomeAtravessador.getSelectedItem().toString())+" "
                        + "and mercado='Mercado Nacional'");
        preencher_jtableMercado(jtMercadoNacional);
        conexao.execute("select * from atravessador_cadastro");
        }else if (i == 3){
        //Atualiza A primeira tabela Mercado Internacional
        conexao.execute("select * from atravessador_addmercado where id_atravessador="
                        +pega_codigo_ou_nome(1,cbNomeAtravessador.getSelectedItem().toString())+" "
                        + "and mercado='Mercado Internacional'");
        preencher_jtableMercado(jtMercadoInternacional);
        conexao.execute("select * from atravessador_cadastro");
        }
    }

}
