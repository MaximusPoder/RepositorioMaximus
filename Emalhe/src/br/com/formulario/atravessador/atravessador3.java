package br.com.formulario.atravessador;

import br.com.formulario.pescador.*;
import br.com.conexao.Conexao;
import br.com.util.Utilidade;
import java.sql.SQLException;
import javax.swing.JOptionPane;


/**
 *
 * @author Jhonathas
 */
public class atravessador3 extends javax.swing.JFrame {

    private Utilidade util = new Utilidade();
    private int inicia_combo = 0;
    private Conexao conexao;

    public atravessador3() {
        initComponents(); //Inicializa os componentes da tela
        conexao = new Conexao();
        conexao.conecta("emalhe");

        //Insere nome do pescador no cbPescador
        attCbPescador();
        mostra_dados();

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupo_questao_1 = new javax.swing.ButtonGroup();
        grupo_questao_2 = new javax.swing.ButtonGroup();
        grupo_questao_3 = new javax.swing.ButtonGroup();
        grupo_questao_4 = new javax.swing.ButtonGroup();
        grupo_questao_5 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        cbPescador = new javax.swing.JComboBox();
        jLabel24 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        taQuestao5 = new javax.swing.JTextArea();
        jLabel27 = new javax.swing.JLabel();
        ckbQ3TrocadeOleo = new javax.swing.JCheckBox();
        ckbQ3TrocadePescado = new javax.swing.JCheckBox();
        ckbQ3TrocadeAlimentos = new javax.swing.JCheckBox();
        ckbQ3Outros = new javax.swing.JCheckBox();
        jLabel28 = new javax.swing.JLabel();
        ckbQ4Outros = new javax.swing.JCheckBox();
        ckbQ4PorPesqueiros = new javax.swing.JCheckBox();
        ckbQ4PorSobreposicaoDeRedeEEspinhel = new javax.swing.JCheckBox();
        ckbQ4PorSobreposicaodeRedes = new javax.swing.JCheckBox();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        taQuestao6 = new javax.swing.JTextArea();
        jLabel35 = new javax.swing.JLabel();
        ckbQuestao11DeCrescimento = new javax.swing.JCheckBox();
        ckbQuestao11Estabilizacao = new javax.swing.JCheckBox();
        ckbQuestao11DeDiminuicao = new javax.swing.JCheckBox();
        btSalvar = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        btAtualizar = new javax.swing.JButton();
        jLabel36 = new javax.swing.JLabel();
        jScrollPane11 = new javax.swing.JScrollPane();
        taQuestao11 = new javax.swing.JTextArea();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Questionário Atravessador");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                fechar_janela(evt);
            }
        });

        jScrollPane1.setAutoscrolls(true);

        cbPescador.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbPescadorItemStateChanged(evt);
            }
        });
        cbPescador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbPescadorActionPerformed(evt);
            }
        });

        jLabel24.setText("Atravessador");

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        jLabel42.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel42.setText("Perspectiva Atravessador");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(274, 274, 274)
                .addComponent(jLabel42)
                .addContainerGap(288, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel42)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel43.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel43.setText("Percepção e Perspectivas:");

        taQuestao5.setColumns(20);
        taQuestao5.setRows(5);
        jScrollPane5.setViewportView(taQuestao5);

        jLabel27.setText("2 - Existe alguma interação entre os atravessadores em relação à troca, cooperação dos produtos?");

        ckbQ3TrocadeOleo.setText("Emprestimo de R$");

        ckbQ3TrocadePescado.setText("Troca de pescado ou grude");

        ckbQ3TrocadeAlimentos.setText("Divisão de despesas");

        ckbQ3Outros.setText("Outros");

        jLabel28.setText("3 - Existe alguma competitividade/rivalidade entre os atravessadores?");

        ckbQ4Outros.setText("Outros");

        ckbQ4PorPesqueiros.setText("Por clientes");

        ckbQ4PorSobreposicaoDeRedeEEspinhel.setText("Por ponto de venda");

        ckbQ4PorSobreposicaodeRedes.setText("Por produtos");

        jLabel29.setText("5 - Pretende continuar na atividade?");

        jLabel30.setText("4 - Existem conflitos com instituições (IBAMA, MPA, SEPAQ)? Quais instituições e descrever conflitos.");

        taQuestao6.setColumns(20);
        taQuestao6.setRows(5);
        jScrollPane6.setViewportView(taQuestao6);

        jLabel35.setText("6 - Que perspectivas você tem (vê) para os próximos anos?");

        ckbQuestao11DeCrescimento.setText("De crescimento");

        ckbQuestao11Estabilizacao.setText("Estabilização");

        ckbQuestao11DeDiminuicao.setText("De diminuição");

        btSalvar.setText("Salvar");
        btSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvarActionPerformed(evt);
            }
        });

        btAtualizar.setText("Atualizar");
        btAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAtualizarActionPerformed(evt);
            }
        });

        jLabel36.setText("1 - Quais dificuldades encontradas para manter a atividade da venda? Quais soluções para melhorar o trabalho?");

        taQuestao11.setColumns(20);
        taQuestao11.setRows(5);
        jScrollPane11.setViewportView(taQuestao11);

        jCheckBox1.setText("Sim");

        jCheckBox2.setText("Sim");

        jCheckBox3.setText("Sim Porque?");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel27)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBox1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ckbQ3TrocadeOleo)
                            .addComponent(ckbQ3TrocadePescado)
                            .addComponent(ckbQ3TrocadeAlimentos)
                            .addComponent(ckbQ3Outros))))
                .addContainerGap(109, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel28)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBox2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ckbQ4PorSobreposicaodeRedes)
                            .addComponent(ckbQ4PorPesqueiros)
                            .addComponent(ckbQ4PorSobreposicaoDeRedeEEspinhel)
                            .addComponent(ckbQ4Outros))))
                .addContainerGap(277, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel29)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox3)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel30, javax.swing.GroupLayout.DEFAULT_SIZE, 711, Short.MAX_VALUE)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 711, Short.MAX_VALUE)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 711, Short.MAX_VALUE))
                        .addGap(18, 18, 18))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(ckbQuestao11DeCrescimento)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ckbQuestao11Estabilizacao)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ckbQuestao11DeDiminuicao))
                            .addComponent(jLabel35))
                        .addContainerGap(388, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 546, Short.MAX_VALUE)
                        .addComponent(btAtualizar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btSalvar)
                        .addGap(24, 24, 24))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel24)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbPescador, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel43)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel36)
                        .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 717, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 741, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbPescador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel43)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel36)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(jCheckBox1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ckbQ3TrocadeOleo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ckbQ3TrocadePescado)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ckbQ3TrocadeAlimentos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ckbQ3Outros)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28)
                    .addComponent(jCheckBox2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ckbQ4PorPesqueiros)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ckbQ4PorSobreposicaodeRedes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ckbQ4PorSobreposicaoDeRedeEEspinhel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ckbQ4Outros)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel30)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29)
                    .addComponent(jCheckBox3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel35)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ckbQuestao11DeCrescimento)
                    .addComponent(ckbQuestao11Estabilizacao)
                    .addComponent(ckbQuestao11DeDiminuicao))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btSalvar)
                    .addComponent(btAtualizar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane1.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 788, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 471, Short.MAX_VALUE)
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-806)/2, (screenSize.height-516)/2, 806, 516);
    }// </editor-fold>//GEN-END:initComponents

    private void fechar_janela(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_fechar_janela
        conexao.desconecta();
    }//GEN-LAST:event_fechar_janela

    private void btSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvarActionPerformed
        salvar_dados();
    }//GEN-LAST:event_btSalvarActionPerformed

    private void btAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAtualizarActionPerformed
        atualizar_dados();
    }//GEN-LAST:event_btAtualizarActionPerformed

    private void cbPescadorItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbPescadorItemStateChanged
        
    }//GEN-LAST:event_cbPescadorItemStateChanged

    private void cbPescadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbPescadorActionPerformed
        if (inicia_combo == 1){
            mostra_dados();
        }
        inicia_combo = 1;
    }//GEN-LAST:event_cbPescadorActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new atravessador3().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAtualizar;
    private javax.swing.JButton btSalvar;
    private javax.swing.JComboBox cbPescador;
    private javax.swing.JCheckBox ckbQ3Outros;
    private javax.swing.JCheckBox ckbQ3TrocadeAlimentos;
    private javax.swing.JCheckBox ckbQ3TrocadeOleo;
    private javax.swing.JCheckBox ckbQ3TrocadePescado;
    private javax.swing.JCheckBox ckbQ4Outros;
    private javax.swing.JCheckBox ckbQ4PorPesqueiros;
    private javax.swing.JCheckBox ckbQ4PorSobreposicaoDeRedeEEspinhel;
    private javax.swing.JCheckBox ckbQ4PorSobreposicaodeRedes;
    private javax.swing.JCheckBox ckbQuestao11DeCrescimento;
    private javax.swing.JCheckBox ckbQuestao11DeDiminuicao;
    private javax.swing.JCheckBox ckbQuestao11Estabilizacao;
    private javax.swing.ButtonGroup grupo_questao_1;
    private javax.swing.ButtonGroup grupo_questao_2;
    private javax.swing.ButtonGroup grupo_questao_3;
    private javax.swing.ButtonGroup grupo_questao_4;
    private javax.swing.ButtonGroup grupo_questao_5;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextArea taQuestao11;
    private javax.swing.JTextArea taQuestao5;
    private javax.swing.JTextArea taQuestao6;
    // End of variables declaration//GEN-END:variables


    private void mostra_dados(){
        limpar_dados();
        String codigo = util.separa(1,cbPescador.getSelectedItem().toString());
        System.out.println(codigo);
        try {
            //Pescador Moradia
            conexao.execute("SELECT * FROM pescador_perspectiva WHERE cod_pescador = "+codigo);
            conexao.resultSet.first();

            //Selecionar os check boxes conforme o BD
            String testador = new String();

            testador = conexao.resultSet.getString("questao1");
//            if (testador.equals("sim"))
//                   rbQ1sim.setSelected(true);
//            else
//                   rbQ1sim.setSelected(false);
//
//            if (testador.equals("não"))
//                   rbQ1nao.setSelected(true);
//            else
//                   rbQ1nao.setSelected(false);
//
//            testador = conexao.resultSet.getString("questao2");
//            if (testador.equals("aumentando"))
//                   rbQ2Aumentando.setSelected(true);
//            else
//                   rbQ2Aumentando.setSelected(false);
//
//            if (testador.equals("diminuindo"))
//                   rbQ2Diminuindo.setSelected(true);
//            else
//                   rbQ2Diminuindo.setSelected(false);
//
//            testador = conexao.resultSet.getString("questao3");
//            if (!testador.equals(""))
//                   rbQ3Sim.setSelected(true);
//            else
//                   rbQ3Sim.setSelected(false);
//
//            if (testador.equals(""))
//                   rbQ3Nao.setSelected(true);
//            else
//                   rbQ3Nao.setSelected(false);

            if (testador.equals("Troca de óleo"))
                   ckbQ3TrocadeOleo.setSelected(true);
            else
                   ckbQ3TrocadeOleo.setSelected(false);

            if (testador.equals("Troca de pescado ou grude"))
                   ckbQ3TrocadePescado.setSelected(true);
            else
                   ckbQ3TrocadePescado.setSelected(false);

            if (testador.equals("Troca de alimentos"))
                   ckbQ3TrocadeAlimentos.setSelected(true);
            else
                   ckbQ3TrocadeAlimentos.setSelected(false);

//            if (testador.equals("Rebocar"))
//                   ckbQ3Rebocar.setSelected(true);
//            else
//                   ckbQ3Rebocar.setSelected(false);
//
//            if (testador.equals("Outros"))
//                   ckbQ3Outros.setSelected(true);
//            else
//                   ckbQ3Outros.setSelected(false);
//
//            testador = conexao.resultSet.getString("questao4");
//            if (!testador.equals(""))
//                   rbQ4Sim.setSelected(true);
//            else
//                   rbQ4Sim.setSelected(false);
//
//            if (testador.equals(""))
//                   rbQ4Nao.setSelected(true);
//            else
//                   rbQ4Nao.setSelected(false);

            if (testador.equals("Por pesqueiros"))
                   ckbQ4PorPesqueiros.setSelected(true);
            else
                   ckbQ4PorPesqueiros.setSelected(false);

            if (testador.equals("Por sobreposição de redes"))
                   ckbQ4PorSobreposicaodeRedes.setSelected(true);
            else
                   ckbQ4PorSobreposicaodeRedes.setSelected(false);

            if (testador.equals("Por sobreposição de rede e espinhel"))
                   ckbQ4PorSobreposicaoDeRedeEEspinhel.setSelected(true);
            else
                   ckbQ4PorSobreposicaoDeRedeEEspinhel.setSelected(false);

//            if (testador.equals("Por roubo de rede"))
//                   ckbQ4PorRoubodeRede.setSelected(true);
//            else
//                   ckbQ4PorRoubodeRede.setSelected(false);
//
//            if (testador.equals("Outros"))
//                   ckbQ4Outros.setSelected(true);
//            else
//                   ckbQ4Outros.setSelected(false);
//
//            testador = conexao.resultSet.getString("questao5");
//            if (!testador.equals(""))
//                   rbQ5Sim.setSelected(true);
//            else
//                   rbQ5Sim.setSelected(false);
//
//            if (testador.equals(""))
//                   rbQ5Nao.setSelected(true);
//            else
//                   rbQ5Nao.setSelected(false);

            taQuestao5.setText(testador);

            taQuestao6.setText(conexao.resultSet.getString("questao6"));

//            taQuestao7.setText(conexao.resultSet.getString("questao7"));
//
//            taQuestao8.setText(conexao.resultSet.getString("questao8"));
//
//            taQuestao9.setText(conexao.resultSet.getString("questao9"));
//
//            taQuestao10.setText(conexao.resultSet.getString("questao10"));

            testador = conexao.resultSet.getString("questao11");
            if (testador.equals("De crescimento"))
                   ckbQuestao11DeCrescimento.setSelected(true);
            else
                   ckbQuestao11DeCrescimento.setSelected(false);

            if (testador.equals("Estabilização"))
                   ckbQuestao11Estabilizacao.setSelected(true);
            else
                   ckbQuestao11Estabilizacao.setSelected(false);

            if (testador.equals("De diminuição"))
                   ckbQuestao11DeDiminuicao.setSelected(true);
            else
                   ckbQuestao11DeDiminuicao.setSelected(false);

        }catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,"Nenhum registro encontrado "+ ex );
                System.out.println("Erro no mostrar dados");               
        }

    }

    private void attCbPescador() {
        try {
            cbPescador.removeAllItems();
            conexao.execute("select * from pescador");

            while (conexao.resultSet.next()){
                cbPescador.addItem(conexao.resultSet.getString("cod_pescador")+
                            " # "+ conexao.resultSet.getString("nome"));
            }

        }catch (SQLException ex) {
            System.out.println("Erro no cbPescador "+ex);
        }
    }

    private void limpar_dados() {
        
//        rbQ1sim.setSelected(false);
//        rbQ1nao.setSelected(false);
//        rbQ2Aumentando.setSelected(false);
//        rbQ2Diminuindo.setSelected(false);
//        rbQ3Sim.setSelected(false);
//        rbQ3Nao.setSelected(false);
//        ckbQ3TrocadeOleo.setSelected(false);
//        ckbQ3TrocadePescado.setSelected(false);
//        ckbQ3TrocadeAlimentos.setSelected(false);
//        ckbQ3Rebocar.setSelected(false);
//        ckbQ3Outros.setSelected(false);
//        rbQ4Sim.setSelected(false);
//        rbQ4Nao.setSelected(false);
//        ckbQ4PorPesqueiros.setSelected(false);
//        ckbQ4PorSobreposicaodeRedes.setSelected(false);
//        ckbQ4PorSobreposicaoDeRedeEEspinhel.setSelected(false);
//        ckbQ4PorRoubodeRede.setSelected(false);
//        ckbQ4Outros.setSelected(false);
//        rbQ4Sim.setSelected(false);
//        rbQ4Nao.setSelected(false);
//        taQuestao5.setText("");
//        taQuestao6.setText("");
//        taQuestao7.setText("");
//        taQuestao8.setText("");
//        taQuestao9.setText("");
//        taQuestao10.setText("");
        ckbQuestao11DeCrescimento.setSelected(false);
        ckbQuestao11Estabilizacao.setSelected(false);
        ckbQuestao11DeDiminuicao.setSelected(false);

    }

    private void salvar_dados() {
    String codigo = util.separa(1,cbPescador.getSelectedItem().toString());
    System.out.println(codigo);

          //Tabela Locais da composição pescaria
          //Pegando ites do CB

//            String q1 = new String();
//            if (rbQ1sim.isSelected())
//                   q1 = "sim";
//            else
//                   q1 = "não";
//
//            String q2 = new String();
//            if (rbQ2Aumentando.isSelected())
//                   q2 = "aumentando";
//            else if (rbQ2Diminuindo.isSelected())
//                   q2 = "diminuindo";

//            String q3 = new String();
//            if (ckbQ3TrocadeOleo.isSelected())
//                   q3 = "Troca de óleo";
//            else if (ckbQ3TrocadePescado.isSelected())
//                   q3 = "Troca de pescado ou grude";
//            else if (ckbQ3TrocadeAlimentos.isSelected())
//                   q3 = "Troca de alimentos";
//            else if (ckbQ3Rebocar.isSelected())
//                   q3 = "Rebocar";
//            else if (ckbQ3Outros.isSelected())
//                   q3 = "Outros";
//
//            String q4 = new String();
//            if (ckbQ4PorPesqueiros.isSelected())
//                   q4 = "Por pesqueiros";
//            else if (ckbQ4PorSobreposicaodeRedes.isSelected())
//                   q4 = "Por sobreposição de redes";
//            else if (ckbQ4PorSobreposicaoDeRedeEEspinhel.isSelected())
//                   q4 = "Por sobreposição de rede e espinhel";
//            else if (ckbQ4PorRoubodeRede.isSelected())
//                   q4 = "Por roubo de rede";
//            else if (ckbQ4Outros.isSelected())
//                   q4 = "Outros";
//
//            String q11 = new String();
//            if (ckbQ4PorPesqueiros.isSelected())
//                   q11 = "De crescimento";
//            else if (ckbQ4PorSobreposicaodeRedes.isSelected())
//                   q11 = "Estabilização";
//            else if (ckbQ4PorSobreposicaoDeRedeEEspinhel.isSelected())
//                   q11 = "De diminuição";
//
//            String sqlinsert = "insert into pescador_perspectiva "
//                    + "(cod_pescador,questao1,questao2,questao3,"
//                    + "questao4,questao5,questao6,questao7,"
//                    + "questao8,questao9,questao10,questao11"
//                    +  ") values ("+
//                    codigo+",'"+
//                    q1+"','"+
//                    q2+"','"+
//                    q3+"','"+
//                    q4+"','"+
//                    taQuestao5.getText()+"','"+
//                    taQuestao6.getText()+"','"+
//                    taQuestao7.getText()+"','"+
//                    taQuestao8.getText()+"','"+
//                    taQuestao9.getText()+"','"+
//                    taQuestao10.getText()+"','"+
//                    q11+"')";

//            //System.out.println(sqlinsert);
//            if (conexao.salvar(sqlinsert)) {
//                System.out.println("Pescador Perspectiva - Cadastrado com sucesso");
//                mostra_dados();
//            }


    }

    private void atualizar_dados() {
    String codigo = util.separa(1,cbPescador.getSelectedItem().toString());
    System.out.println(codigo);

          //Tabela Locais da composição pescaria
          //Pegando ites do CB

            String q1 = new String();
//            if (rbQ1sim.isSelected())
//                   q1 = "sim";
//            else
//                   q1 = "não";
//
//            String q2 = new String();
//            if (rbQ2Aumentando.isSelected())
//                   q2 = "aumentando";
//            else if (rbQ2Diminuindo.isSelected())
//                   q2 = "diminuindo";
//
//            String q3 = new String();
//            if (ckbQ3TrocadeOleo.isSelected())
//                   q3 = "Troca de óleo";
//            else if (ckbQ3TrocadePescado.isSelected())
//                   q3 = "Troca de pescado ou grude";
//            else if (ckbQ3TrocadeAlimentos.isSelected())
//                   q3 = "Troca de alimentos";
//            else if (ckbQ3Rebocar.isSelected())
//                   q3 = "Rebocar";
//            else if (ckbQ3Outros.isSelected())
//                   q3 = "Outros";
//
//            String q4 = new String();
//            if (ckbQ4PorPesqueiros.isSelected())
//                   q4 = "Por pesqueiros";
//            else if (ckbQ4PorSobreposicaodeRedes.isSelected())
//                   q4 = "Por sobreposição de redes";
//            else if (ckbQ4PorSobreposicaoDeRedeEEspinhel.isSelected())
//                   q4 = "Por sobreposição de rede e espinhel";
//            else if (ckbQ4PorRoubodeRede.isSelected())
//                   q4 = "Por roubo de rede";
//            else if (ckbQ4Outros.isSelected())
//                   q4 = "Outros";
//
//            String q11 = new String();
//            if (ckbQuestao11DeCrescimento.isSelected())
//                   q11 = "De crescimento";
//            else if (ckbQuestao11Estabilizacao.isSelected())
//                   q11 = "Estabilização";
//            else if (ckbQuestao11DeDiminuicao.isSelected())
//                   q11 = "De diminuição";
//
//        String sqlupdate ="UPDATE pescador_perspectiva SET "
//                    +"questao1 = '"+q1+"',"
//                    +"questao2 = '"+q2+"',"
//                    +"questao3 = '"+q3+"',"
//                    +"questao4 = '"+q4+"',"
//                    +"questao5 = '"+taQuestao5.getText()+"',"
//                    +"questao6 = '"+taQuestao6.getText()+"',"
//                    +"questao7 = '"+taQuestao7.getText()+"',"
//                    +"questao8 = '"+taQuestao8.getText()+"',"
//                    +"questao9 = '"+taQuestao9.getText()+"',"
//                    +"questao10 = '"+taQuestao10.getText()+"',"
//                    +"questao11 = '"+q11+"' "+

//                    "where cod_pescador = "+codigo;
//
//            //System.out.println(sqlupdate);
//            if (conexao.update(sqlupdate)){
//                System.out.println("Atualizado com sucesso");
//                mostra_dados();
//            }
    }

}
